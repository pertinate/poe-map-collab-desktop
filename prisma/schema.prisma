// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    output        = "../src/generated/client"
    binaryTargets = ["native", "darwin", "darwin-arm64"]
}

datasource db {
    provider = "postgresql"
    url      = "postgresql://pertinate_db_admin:Ko9gsKtcKuAka4CTXpbCHqZodYJct626XjsVgwKwH@68.1.245.37:9001/poecollab"
}

model User {
    id               String            @id @default(uuid())
    name             String            @unique
    nickName         String
    lastZone         String
    MapStatus        MapStatus[]
    ownedGroups      Group[]
    groupMemberships GroupMembership[]
}

model Group {
    id               String            @id @default(uuid())
    ownerId          String
    name             String
    createdAt        DateTime          @default(now()) // Date field for tracking when a group is created
    lastUpdatedAt    DateTime?         @updatedAt // Last updated time for the group
    owner            User              @relation(fields: [ownerId], references: [id])
    mapStatus        MapStatus[]
    groupMemberships GroupMembership[]
}

model GroupMembership {
    id       String   @id @default(uuid())
    user     User     @relation(fields: [userId], references: [id])
    userId   String
    group    Group    @relation(fields: [groupId], references: [id])
    groupId  String
    joinedAt DateTime @default(now()) // Date field for tracking when a user joined the group
}

model MapStatus {
    id            String   @id @default(uuid())
    name          String
    tier          Int
    complete      Boolean
    user          User     @relation(fields: [userId], references: [id])
    userId        String
    group         Group    @relation(fields: [groupId], references: [id])
    groupId       String
    lastUpdatedAt DateTime @default(now()) @updatedAt // Last updated time for MapStatus
}
